data = read.table('F:\\Video_Popularity\\rawdata\\150801+151017\\N7N30')
n7 = data$V2
n30 = data$V3
# get n7 > 0 for log
idx = which(n7 > 0)
length(n7) - length(idx)
n7_p = n7[idx]
n30_p = n30[idx]
# Log-Linear with maximum likelihood estimation
# ln(y) = ln(x) + c
LL <- function(c, sigma) {
R = log(n30_p) - log(n7_p) - c
R = suppressWarnings(dnorm(R, 0, sigma, log = TRUE))
-sum(R)
}
fit = mle(LL, start = list(c = 0.3, sigma = 1))
library(stats4)
fit = mle(LL, start = list(c = 0.3, sigma = 1))
fit@coef[1]
# Linear with least weighted squares
# y = ax
reg = lm(n30 ~ n7 - 1, weights = (1 / n30) ^ 2)
summary(reg)
reg$coefficients
# 1.235237
log(reg$coefficients)
# 0.2112632
data = read.table('F:\\Video_Popularity\\rawdata\\150801+151017\\I7N30')
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n30 = data$V9
# Multi-Linear with weighted LS
# y = a1x1 + ... + a7x7
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
#1.179124 1.289353 1.241006 1.506698 1.352725 1.731021 2.237415
# --------------------------------------------------
library(stats4)
data = read.table('F:\\Video_Popularity\\analysis\\1_get_para\\N7N30')
n7 = data$V2
n30 = data$V3
# get n7 > 0 for log
idx = which(n7 > 0)
length(n7) - length(idx)
n7_p = n7[idx]
n30_p = n30[idx]
# --------------------------------------------------
# Log-Linear with maximum likelihood estimation
# ln(y) = ln(x) + c
LL <- function(c, sigma) {
R = log(n30_p) - log(n7_p) - c
R = suppressWarnings(dnorm(R, 0, sigma, log = TRUE))
-sum(R)
}
fit = mle(LL, start = list(c = 0.3, sigma = 1))
fit@coef[1]
# 0.3466935
# --------------------------------------------------
# --------------------------------------------------
# Linear with least weighted squares
# y = ax
# c = ln(a), a = e^c
reg = lm(n30 ~ n7 - 1, weights = (1 / n30) ^ 2)
summary(reg)
reg$coefficients
# 1.235237
log(reg$coefficients)
# 0.2112632
# --------------------------------------------------
data = read.table('F:\\Video_Popularity\\analysis\\1_get_para\\I7N30')
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n30 = data$V9
# --------------------------------------------------
# Multi-Linear with weighted LS
# y = a1x1 + ... + a7x7
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
#1.179124 1.289353 1.241006 1.506698 1.352725 1.731021 2.237415
# --------------------------------------------------
library(stats4)
data = read.table('F:\\Video_Popularity\\rawdata\\150801+151017\\N7N30')
n7 = data$V2
n30 = data$V3
# get n7 > 0 for log
idx = which(n7 > 0)
length(n7) - length(idx)
n7_p = n7[idx]
n30_p = n30[idx]
# --------------------------------------------------
# Log-Linear with maximum likelihood estimation
# ln(y) = ln(x) + c
LL <- function(c, sigma) {
R = log(n30_p) - log(n7_p) - c
R = suppressWarnings(dnorm(R, 0, sigma, log = TRUE))
-sum(R)
}
fit = mle(LL, start = list(c = 0.3, sigma = 1))
fit@coef[1]
# 0.3466935
# --------------------------------------------------
# --------------------------------------------------
# Linear with least weighted squares
# y = ax
# c = ln(a), a = e^c
reg = lm(n30 ~ n7 - 1, weights = (1 / n30) ^ 2)
summary(reg)
reg$coefficients
# 1.235237
log(reg$coefficients)
# 0.2112632
# --------------------------------------------------
data = read.table('F:\\Video_Popularity\\rawdata\\150801+151017\\I7N30')
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n30 = data$V9
# --------------------------------------------------
# Multi-Linear with weighted LS
# y = a1x1 + ... + a7x7
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
#1.179124 1.289353 1.241006 1.506698 1.352725 1.731021 2.237415
reg$coefficients
# --------------------------------------------------
library(stats4)
workpath = 'F:\\Video_Popularity'
data = read.table(paste(workpath, '\\rawdata\\150801+151017\\N7N30', sep = ''))
n7 = data$V2
n30 = data$V3
# get n7 > 0 for log
idx = which(n7 > 0)
length(n7) - length(idx)
n7_p = n7[idx]
n30_p = n30[idx]
n72 = n7 * 0.5
reg = lm(n30 ~ n7 - 1, weights = (1 / n30) ^ 2)
summary(reg)
reg$coefficients
reg = lm(n30 ~ n7 + n72 - 1, weights = (1 / n30) ^ 2)
summary(reg)
reg$coefficients
workpath = 'F:/Video_Popularity/'
data = read.table(paste(workpath, 'rawdata/150801+151017/N7N30', sep = ''))
n7 = data$V2
n30 = data$V3
library(stats4)
workpath = 'F:/Video_Popularity/'
data = read.table(paste(workpath, 'rawdata/150801+151017/N30', sep = ''))
n1 = data$V2
n2 = data$V3
n3 = data$V4
n4 = data$V5
n5 = data$V6
n6 = data$V7
n7 = data$V8
n30 = data$V31
i1 = n1
i2 = n2 - n1
i3 = n3 - n2
i4 = n4 - n3
i5 = n5 - n4
i6 = n6 - n5
i7 = n7 - n6
reg1 = lm(n30 ~ n1 + n2 + n3 + n4 + n5 + n6 + n7 - 1, weights = (1 / n30)^2)
summary(reg1)
reg1$coefficients
reg2 = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg2)
reg2$coefficients
reg1$coefficients
reg2$coefficients
reg2$coefficients$i7
reg2$coefficients[7]
reg1$coefficients
reg2$coefficients

i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
burst = data$V32
bv = n7 * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/rpart/I30_training_bp_predicted_i_1100000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
burst = data$V32
bv = n7 * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/rpart/I30_training_bp_predicted_i_0000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
burst = data$V32
bv = n7 * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/rpart/I30_training_bp_predicted_i_others', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
burst = data$V32
bv = n7 * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
library(rpart)
library(rpart.plot)
workpath = 'F:/Video_Popularity/'
training = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/training/I30_training_bp_features', sep = ''), header = TRUE)
training = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/training/I30_training_bp_features', sep = ''), header = TRUE)
training_df = as.data.frame(training[, 3:length(training)])
set.seed(10)
mytree = rpart(label ~ ., training_df, control = rpart.control(xval = 10, cp = 0.001));
tree_cp = printcp(mytree)
#1-SE rule
prune_cp_row = min((1 : dim(tree_cp)[1])[tree_cp[,"xerror"] < min(tree_cp[, "xerror"] + tree_cp[, "xstd"])])
mytree_prune = prune(mytree, cp = tree_cp[prune_cp_row, "CP"])
printcp(mytree_prune)
print(mytree_prune$variable.importance);
predict = predict(mytree_prune, training, type = 'class')
ll = c(training$label)
pl = c(predict)
# burst
length(which(ll == 2))
# not burst
length(which(ll == 1))
# burst -> burst
length(which(pl == ll & ll == 2))
# burst -> not burst
length(which(pl != ll & ll == 2))
# not burst -> not burst
length(which(pl == ll & ll == 1))
# not burst -> burst
length(which(pl != ll & ll == 1))
out_df <- data.frame(training$vid, ll - 1, pl - 1);
write.table(out_df,
file = paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/rpart/I30_training_results', sep = ''),
sep = '\t', quote = FALSE, col.names = FALSE, row.names = FALSE)
# test performance
test = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/test/I30_test_bp_features', sep = ''), header = TRUE)
predict = predict(mytree_prune, test, type = 'class')
ll = c(test$label)
pl = c(predict)
# burst
length(which(ll == 2))
# not burst
length(which(ll == 1))
# burst -> burst
length(which(pl == ll & ll == 2))
# burst -> not burst
length(which(pl != ll & ll == 2))
# not burst -> not burst
length(which(pl == ll & ll == 1))
# not burst -> burst
length(which(pl != ll & ll == 1))
out_df <- data.frame(test$vid, ll - 1, pl - 1);
write.table(out_df,
file = paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection//rpart/I30_test_results_i', sep = ''),
sep = '\t', quote = FALSE, col.names = FALSE, row.names = FALSE)
workpath = 'F:/Video_Popularity/'
#workpath = '/Users/ouyangshuxin/Documents/work/Video_Popularity/'
#--------------------------------------------------
# PBML (+ indicator*a*n7)
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/rpart/I30_training_bp_predicted_1000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
burst = data$V32
bv = n7 * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/rpart/I30_training_bp_predicted_1000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
burst = data$V32
bv = n7 * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/rpart/I30_training_bp_predicted_1100000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
burst = data$V32
bv = n7 * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/rpart/I30_training_bp_predicted_0000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
burst = data$V32
bv = n7 * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/rpart/I30_training_bp_predicted_others', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
burst = data$V32
bv = n7 * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
workpath = 'F:/Video_Popularity/'
#workpath = '/Users/ouyangshuxin/Documents/work/Video_Popularity/'
#--------------------------------------------------
# PBML (+ indicator*a*n7)
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/training/I30_training_bp_1000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
burst = data$V32
bv = n7 * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/training/I30_training_bp_1100000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
burst = data$V32
bv = n7 * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/training/I30_training_bp_0000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
burst = data$V32
bv = n7 * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/training/I30_training_bp_others', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
burst = data$V32
bv = n7 * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
workpath = 'F:/Video_Popularity/'
#workpath = '/Users/ouyangshuxin/Documents/work/Video_Popularity/'
#--------------------------------------------------
# PBML (+ indicator*a*n7)
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/training/I30_training_bp_others', sep = ''))
i1 = data$V2
library(rpart)
library(rpart.plot)
workpath = 'F:/Video_Popularity/'
training = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/training/I30_training_bp_features', sep = ''), header = TRUE)
training_df = as.data.frame(training[, 3:length(training)])
set.seed(10)
mytree = rpart(label ~ ., training_df, control = rpart.control(xval = 10, cp = 0.001));
tree_cp = printcp(mytree)
#1-SE rule
prune_cp_row = min((1 : dim(tree_cp)[1])[tree_cp[,"xerror"] < min(tree_cp[, "xerror"] + tree_cp[, "xstd"])])
mytree_prune = prune(mytree, cp = tree_cp[prune_cp_row, "CP"])
printcp(mytree_prune)
print(mytree_prune$variable.importance);
plot(mytree_prune);
test = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/test/I30_test_bp_features', sep = ''), header = TRUE)
predict = predict(mytree_prune, test, type = 'class')
ll = c(test$label)
pl = c(predict)
# burst
length(which(ll == 2))
# not burst
length(which(ll == 1))
# burst -> burst
length(which(pl == ll & ll == 2))
# burst -> not burst
length(which(pl != ll & ll == 2))
# not burst -> not burst
length(which(pl == ll & ll == 1))
# not burst -> burst
length(which(pl != ll & ll == 1))
library(rpart)
library(rpart.plot)
workpath = 'F:/Video_Popularity/'
training = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/training/I30_training_bp_features', sep = ''), header = TRUE)
idx = c(1, 6, 7, 8, 9, (13:21), (26:57))
training_df = as.data.frame(training[, idx])
set.seed(10)
mytree = rpart(label ~ ., training_df, control = rpart.control(xval = 10, cp = 0.001));
tree_cp = printcp(mytree)
prune_cp_row = min((1 : dim(tree_cp)[1])[tree_cp[,"xerror"] < min(tree_cp[, "xerror"] + tree_cp[, "xstd"])])
idx = c(3, 4, (9:12), (16:24), (29:60))
training_df = as.data.frame(training[, idx])
set.seed(10)
mytree = rpart(label ~ ., training_df, control = rpart.control(xval = 10, cp = 0.001));
tree_cp = printcp(mytree)
prune_cp_row = min((1 : dim(tree_cp)[1])[tree_cp[,"xerror"] < min(tree_cp[, "xerror"] + tree_cp[, "xstd"])])
mytree_prune = prune(mytree, cp = tree_cp[prune_cp_row, "CP"])
printcp(mytree_prune)
print(mytree_prune$variable.importance);
test = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/test/I30_test_bp_features', sep = ''), header = TRUE)
predict = predict(mytree_prune, test, type = 'class')
ll = c(test$label)
pl = c(predict)
# burst
length(which(ll == 2))
# not burst
length(which(ll == 1))
# burst -> burst
length(which(pl == ll & ll == 2))
# burst -> not burst
length(which(pl != ll & ll == 2))
# not burst -> not burst
length(which(pl == ll & ll == 1))
# not burst -> burst
length(which(pl != ll & ll == 1))
print(mytree_prune$variable.importance);
library(rpart)
library(rpart.plot)
workpath = 'F:/Video_Popularity/'
training = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/training/I30_training_bp_features', sep = ''), header = TRUE)
training_df = as.data.frame(training[, 3:length(training)])
set.seed(10)
mytree = rpart(label ~ ., training_df, control = rpart.control(xval = 10, cp = 0.001));
tree_cp = printcp(mytree)
#1-SE rule
prune_cp_row = min((1 : dim(tree_cp)[1])[tree_cp[,"xerror"] < min(tree_cp[, "xerror"] + tree_cp[, "xstd"])])
mytree_prune = prune(mytree, cp = tree_cp[prune_cp_row, "CP"])
printcp(mytree_prune)
print(mytree_prune$variable.importance);
plot(mytree_prune);
predict = predict(mytree_prune, training, type = 'class')
ll = c(training$label)
pl = c(predict)
# burst
length(which(ll == 2))
# not burst
length(which(ll == 1))
# burst -> burst
length(which(pl == ll & ll == 2))
# burst -> not burst
length(which(pl != ll & ll == 2))
# not burst -> not burst
length(which(pl == ll & ll == 1))
# not burst -> burst
length(which(pl != ll & ll == 1))
out_df <- data.frame(training$vid, ll - 1, pl - 1);
write.table(out_df,
file = paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/rpart/I30_training_results', sep = ''),
sep = '\t', quote = FALSE, col.names = FALSE, row.names = FALSE)
# test performance
test = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/test/I30_test_bp_features', sep = ''), header = TRUE)
predict = predict(mytree_prune, test, type = 'class')
ll = c(test$label)
pl = c(predict)
# burst
length(which(ll == 2))
# not burst
length(which(ll == 1))
# burst -> burst
length(which(pl == ll & ll == 2))
# burst -> not burst
length(which(pl != ll & ll == 2))
# not burst -> not burst
length(which(pl == ll & ll == 1))
# not burst -> burst
length(which(pl != ll & ll == 1))
library(rpart)
library(rpart.plot)
workpath = 'F:/Video_Popularity/'
training = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/training/I30_training_bp_features', sep = ''), header = TRUE)
training_df = as.data.frame(training[, 3:length(training)])
set.seed(10)
mytree = rpart(label ~ ., training_df, control = rpart.control(xval = 10, cp = 0.001));
tree_cp = printcp(mytree)
#1-SE rule
prune_cp_row = min((1 : dim(tree_cp)[1])[tree_cp[,"xerror"] < min(tree_cp[, "xerror"] + tree_cp[, "xstd"])])
mytree_prune = prune(mytree, cp = tree_cp[prune_cp_row, "CP"])
predict = predict(mytree_prune, training, type = 'class')
ll = c(training$label)
pl = c(predict)
# burst
length(which(ll == 2))
# not burst
length(which(ll == 1))
# burst -> burst
length(which(pl == ll & ll == 2))
# burst -> not burst
length(which(pl != ll & ll == 2))
# not burst -> not burst
length(which(pl == ll & ll == 1))
# not burst -> burst
length(which(pl != ll & ll == 1))
out_df <- data.frame(training$vid, ll - 1, pl - 1);
write.table(out_df,
file = paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/rpart/I30_training_results', sep = ''),
sep = '\t', quote = FALSE, col.names = FALSE, row.names = FALSE)
# test performance
test = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/test/I30_test_bp_features', sep = ''), header = TRUE)
predict = predict(mytree_prune, test, type = 'class')
ll = c(test$label)
pl = c(predict)
# burst
length(which(ll == 2))
# not burst
length(which(ll == 1))
# burst -> burst
length(which(pl == ll & ll == 2))
# burst -> not burst
length(which(pl != ll & ll == 2))
# not burst -> not burst
length(which(pl == ll & ll == 1))
# not burst -> burst
length(which(pl != ll & ll == 1))
out_df <- data.frame(test$vid, ll - 1, pl - 1);
write.table(out_df,
file = paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection//rpart/I30_test_results', sep = ''),
sep = '\t', quote = FALSE, col.names = FALSE, row.names = FALSE)
workpath = 'F:/Video_Popularity/'
#workpath = '/Users/ouyangshuxin/Documents/work/Video_Popularity/'
#--------------------------------------------------
# PBML (+ indicator*a*n7)
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/rpart/I30_training_bp_1000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/rpart/I30_training_bp_predicted_1000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
burst = data$V32
bv = n7 * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/rpart/I30_training_bp_predicted_1100000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
burst = data$V32
bv = n7 * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/rpart/I30_training_bp_predicted_0000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
burst = data$V32
bv = n7 * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/rpart/I30_training_bp_predicted_others', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
burst = data$V32
bv = n7 * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients

summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML+BP/150801+151017/I30_1000000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
indicator = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
bv1 = i1 * indicator
bv2 = i2 * indicator
bv3 = i3 * indicator
bv4 = i4 * indicator
bv5 = i5 * indicator
bv6 = i6 * indicator
bv7 = i7 * indicator
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv1 + bv2 + bv3 + bv4 + bv5 + bv6 + bv7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
#--------------------------------------------------
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML+BP/150801+151017/I30_0100000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
indicator = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
bv1 = i1 * indicator
bv2 = i2 * indicator
bv3 = i3 * indicator
bv4 = i4 * indicator
bv5 = i5 * indicator
bv6 = i6 * indicator
bv7 = i7 * indicator
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv1 + bv2 + bv3 + bv4 + bv5 + bv6 + bv7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
#--------------------------------------------------
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML+BP/150801+151017/I30_0000000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
indicator = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
bv1 = i1 * indicator
bv2 = i2 * indicator
bv3 = i3 * indicator
bv4 = i4 * indicator
bv5 = i5 * indicator
bv6 = i6 * indicator
bv7 = i7 * indicator
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv1 + bv2 + bv3 + bv4 + bv5 + bv6 + bv7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
#--------------------------------------------------
workpath = 'F:/Video_Popularity/'
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML+BP/150801+151017/I30_0000000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
indicator = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
bv1 = i1 * indicator
bv2 = i2 * indicator
bv3 = i3 * indicator
bv4 = i4 * indicator
bv5 = i5 * indicator
bv6 = i6 * indicator
bv7 = i7 * indicator
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + bv1 + bv2 + bv3 + bv4 + bv5 + bv6 + bv7 - 1, weights = (1 / n30)^2)
summary(reg)
library(stats4)
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/work/Video_Popularity/'
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
#burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
# get n7 > 0 for log
idx = which(n7 > 0)
length(n7) - length(idx)
n7_p = n7[idx]
n30_p = n30[idx]
LL <- function(c, sigma) {
R = log(n30_p) - log(n7_p) - c
R = suppressWarnings(dnorm(R, 0, sigma, log = TRUE))
-sum(R)
}
fit = mle(LL, start = list(c = 0.3, sigma = 1))
fit@coef[1]
library(stats4)
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/work/Video_Popularity/'
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/I30_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
# get n7 > 0 for log
idx = which(n7 > 0)
length(n7) - length(idx)
n7_p = n7[idx]
n30_p = n30[idx]
# --------------------------------------------------
# Log-Linear with maximum likelihood estimation
# ln(y) = ln(x) + c
LL <- function(c, sigma) {
R = log(n30_p) - log(n7_p) - c
R = suppressWarnings(dnorm(R, 0, sigma, log = TRUE))
-sum(R)
}
fit = mle(LL, start = list(c = 0.3, sigma = 1))
fit@coef[1]
library(stats4)
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/work/Video_Popularity/'
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
# get n7 > 0 for log
idx = which(n7 > 0)
length(n7) - length(idx)
n7_p = n7[idx]
n30_p = n30[idx]
# --------------------------------------------------
# Log-Linear with maximum likelihood estimation
# ln(y) = ln(x) + c
LL <- function(c, sigma) {
R = log(n30_p) - log(n7_p) - c
R = suppressWarnings(dnorm(R, 0, sigma, log = TRUE))
-sum(R)
}
fit = mle(LL, start = list(c = 0.3, sigma = 1))
fit@coef[1]
library(stats4)
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/work/Video_Popularity/'
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
# get n7 > 0 for log
idx = which(n7 > 0)
length(n7) - length(idx)
n7_p = n7[idx]
n30_p = n30[idx]
# --------------------------------------------------
# Log-Linear with maximum likelihood estimation
# ln(y) = ln(x) + c
LL <- function(c, sigma) {
R = log(n30_p) - log(n7_p) - c
R = suppressWarnings(dnorm(R, 0, sigma, log = TRUE))
-sum(R)
}
fit = mle(LL, start = list(c = 0.3, sigma = 1))
fit@coef[1]
reg = lm(n30 ~ n7 - 1, weights = (1 / n30) ^ 2)
summary(reg)
reg$coefficients
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
library(stats4)
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/work/Video_Popularity/'
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
# get n7 > 0 for log
idx = which(n7 > 0)
length(n7) - length(idx)
n7_p = n7[idx]
n30_p = n30[idx]
# --------------------------------------------------
# Log-Linear with maximum likelihood estimation
# ln(y) = ln(x) + c
LL <- function(c, sigma) {
R = log(n30_p) - log(n7_p) - c
R = suppressWarnings(dnorm(R, 0, sigma, log = TRUE))
-sum(R)
}
fit = mle(LL, start = list(c = 0.3, sigma = 1))
fit@coef[1]
# --------------------------------------------------
# --------------------------------------------------
# Linear with least weighted squares
# y = ax
# c = ln(a), a = e^c
reg = lm(n30 ~ n7 - 1, weights = (1 / n30) ^ 2)
summary(reg)
reg$coefficients
log(reg$coefficients)
# --------------------------------------------------
# --------------------------------------------------
# Multi-Linear with weighted LS
# y = a1x1 + ... + a7x7
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
# --------------------------------------------------
workpath = '/Users/ouyangshuxin/Documents/work/Video_Popularity/'
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/I30_others_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_others_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_0000000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_0010000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_0100000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_1000000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_1010000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_1100000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_2000000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_others_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_0000000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_0010000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_0100000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_1000000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_1010000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_1100000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_2000000_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017_2/I30_others_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
burst = data$V32
n7 = rowSums(data[2:8])
n30 = rowSums(data[2:31])
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients

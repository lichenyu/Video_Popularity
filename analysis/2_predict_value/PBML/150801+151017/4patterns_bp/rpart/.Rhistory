library(rpart)
workpath = '/Users/ouyangshuxin/Documents/Video_Popularity/'
training = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/burst_detection/training/I30_training_bp_features', sep = ''), header = TRUE)
training = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/4patterns_bp/training/I30_training_bp_features', sep = ''), header = TRUE)
test = read.table(paste(workpath, 'analysis/2_predict_value/PBML/150801+151017/4patterns_bp/test/I30_test_bp_features', sep = ''), header = TRUE)
training$statuses_count = NULL
test$statuses_count = NULL
levels(test$public_type) = levels(training$public_type)
training_l = training[, 3]
training_f = as.data.frame(training[, 4:length(training)])
training_d = as.data.frame(training[, 3:length(training)])
test_l = test[, 3]
test_f = as.data.frame(test[, 4:length(test)])
test_d = as.data.frame(test[, 3:length(test)])
set.seed(10)
tree = rpart(label ~ ., training_d, control = rpart.control(xval = 10, cp = 0.001));
tree_cp = printcp(tree)
#1-SE rule
pruned_cp_row = min((1 : dim(tree_cp)[1])[tree_cp[,"xerror"] < min(tree_cp[, "xerror"] + tree_cp[, "xstd"])])
tree_pruned = prune(tree, cp = tree_cp[pruned_cp_row, "CP"])
tree_pruned
summary(tree_pruned)
tree_pruned$variable.importance

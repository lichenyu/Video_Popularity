data = read.table(paste(workpath, 'prediction/datasets/I30_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
i8 = data$V9
i9 = data$V10
ni = rowSums(data[2:10])
n30 = rowSums(data[2:31])
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/Video_Popularity/'
data = read.table(paste(workpath, 'prediction/datasets/I30_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
i8 = data$V9
i9 = data$V10
ni = rowSums(data[2:10])
n30 = rowSums(data[2:31])
library(stats4)
# get n7 > 0 for log
idx = which(ni > 0)
length(ni) - length(idx)
ni_p = ni[idx]
n30_p = n30[idx]
LL <- function(c, sigma) {
R = log(n30_p) - log(ni_p) - c
R = suppressWarnings(dnorm(R, 0, sigma, log = TRUE))
-sum(R)
}
fit = mle(LL, start = list(c = 0.3, sigma = 1))
fit@coef[1]
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/Video_Popularity/'
data = read.table(paste(workpath, 'prediction/i9p4/burst_prediction/I30_training_bp_100000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
i8 = data$V9
i9 = data$V10
ni = rowSums(data[2:10])
n30 = rowSums(data[2:31])
burst = data$V32
bv = ni * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'prediction/i9p4/burst_prediction/I30_training_bp_110000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
i8 = data$V9
i9 = data$V10
ni = rowSums(data[2:10])
n30 = rowSums(data[2:31])
burst = data$V32
bv = ni * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'prediction/i9p4/burst_prediction/I30_training_bp_000000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
i8 = data$V9
i9 = data$V10
ni = rowSums(data[2:10])
n30 = rowSums(data[2:31])
burst = data$V32
bv = ni * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
data = read.table(paste(workpath, 'prediction/i9p4/burst_prediction/I30_training_bp_others', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
i8 = data$V9
i9 = data$V10
ni = rowSums(data[2:10])
n30 = rowSums(data[2:31])
burst = data$V32
bv = ni * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
library(randomForest)
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/Video_Popularity/'
training = read.table(paste(workpath, 'prediction/i11p4/burst_prediction/training_label_features', sep = ''), header = TRUE)
test = read.table(paste(workpath, 'prediction/i11p4/burst_prediction/test_label_features', sep = ''), header = TRUE)
training$statuses_count = NULL
test$statuses_count = NULL
levels(test$public_type) = levels(training$public_type)
training_l = training[, 3]
training_f = as.data.frame(training[, 4:length(training)])
training_d = as.data.frame(training[, 3:length(training)])
test_l = test[, 3]
test_f = as.data.frame(test[, 4:length(test)])
test_d = as.data.frame(test[, 3:length(test)])
set.seed(21)
forest = randomForest(label ~ ., training_d, ntree = 501)
# training - 1000 performance
ll = c(training_l)
pl = c(forest$predicted)
# burst
length(which(ll == 2))
# not burst
length(which(ll == 1))
# burst -> burst
length(which(pl == ll & ll == 2))
# burst -> not burst
length(which(pl != ll & ll == 2))
# not burst -> not burst
length(which(pl == ll & ll == 1))
# not burst -> burst
length(which(pl != ll & ll == 1))
idx_fn = which(pl != ll & ll == 2)
idx_fp = which(pl != ll & ll == 1)
idx_drop = c(idx_fn[1 : 500], idx_fp[1 : 500])
out_df <- data.frame(training[-idx_drop, ]$vid, ll[-idx_drop] - 1, pl[-idx_drop] - 1);
write.table(out_df,
file = paste(workpath, 'prediction/i11p4/burst_prediction/training_bprslts', sep = ''),
sep = '\t', quote = FALSE, col.names = FALSE, row.names = FALSE)
# test - 1000 performance
prediction = predict(forest, test_f, type = 'class')
ll = c(test_l)
pl = c(prediction)
# burst
length(which(ll == 2))
# not burst
length(which(ll == 1))
# burst -> burst
length(which(pl == ll & ll == 2))
# burst -> not burst
length(which(pl != ll & ll == 2))
# not burst -> not burst
length(which(pl == ll & ll == 1))
# not burst -> burst
length(which(pl != ll & ll == 1))
idx_fn = which(pl != ll & ll == 2)
idx_fp = which(pl != ll & ll == 1)
idx_drop = c(idx_fn[1 : 500], idx_fp[1 : 500])
out_df <- data.frame(test[-idx_drop, ]$vid, ll[-idx_drop] - 1, pl[-idx_drop] - 1);
write.table(out_df,
file = paste(workpath, 'prediction/i11p4/burst_prediction/test_bprslts', sep = ''),
sep = '\t', quote = FALSE, col.names = FALSE, row.names = FALSE)
2065 ï¼‹ 9748
2065 + 9748
workpath = '/Users/ouyangshuxin/Documents/Video_Popularity/'
data = read.table(paste(workpath, 'prediction/datasets/I30_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
i8 = data$V9
i9 = data$V10
i10 = data$V11
i11 = data$V12
ni = rowSums(data[2:12])
n30 = rowSums(data[2:31])
# ln(y) = ln(x) + c
library(stats4)
# get n7 > 0 for log
idx = which(ni > 0)
length(ni) - length(idx)
ni_p = ni[idx]
n30_p = n30[idx]
LL <- function(c, sigma) {
R = log(n30_p) - log(ni_p) - c
R = suppressWarnings(dnorm(R, 0, sigma, log = TRUE))
-sum(R)
}
fit = mle(LL, start = list(c = 0.3, sigma = 1))
fit@coef[1]
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/Video_Popularity/'
data = read.table(paste(workpath, 'prediction/i11p4/burst_prediction/I30_training_bp_10000000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
i8 = data$V9
i9 = data$V10
i10 = data$V11
i11 = data$V12
ni = rowSums(data[2:12])
n30 = rowSums(data[2:31])
burst = data$V32
bv = ni * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/Video_Popularity/'
data = read.table(paste(workpath, 'prediction/i11p4/burst_prediction/I30_training_bp_11000000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
i8 = data$V9
i9 = data$V10
i10 = data$V11
i11 = data$V12
ni = rowSums(data[2:12])
n30 = rowSums(data[2:31])
burst = data$V32
bv = ni * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/Video_Popularity/'
data = read.table(paste(workpath, 'prediction/i11p4/burst_prediction/I30_training_bp_11100000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
i8 = data$V9
i9 = data$V10
i10 = data$V11
i11 = data$V12
ni = rowSums(data[2:12])
n30 = rowSums(data[2:31])
burst = data$V32
bv = ni * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/Video_Popularity/'
data = read.table(paste(workpath, 'prediction/i11p4/burst_prediction/I30_training_bp_others', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
i8 = data$V9
i9 = data$V10
i10 = data$V11
i11 = data$V12
ni = rowSums(data[2:12])
n30 = rowSums(data[2:31])
burst = data$V32
bv = ni * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
library(randomForest)
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/Video_Popularity/'
training = read.table(paste(workpath, 'prediction/i13p4/burst_prediction/training_label_features', sep = ''), header = TRUE)
test = read.table(paste(workpath, 'prediction/i13p4/burst_prediction/test_label_features', sep = ''), header = TRUE)
training$statuses_count = NULL
test$statuses_count = NULL
levels(test$public_type) = levels(training$public_type)
training_l = training[, 3]
training_f = as.data.frame(training[, 4:length(training)])
training_d = as.data.frame(training[, 3:length(training)])
test_l = test[, 3]
test_f = as.data.frame(test[, 4:length(test)])
test_d = as.data.frame(test[, 3:length(test)])
set.seed(21)
forest = randomForest(label ~ ., training_d, ntree = 501)
ll = c(training_l)
pl = c(forest$predicted)
# burst
length(which(ll == 2))
# not burst
length(which(ll == 1))
# burst -> burst
length(which(pl == ll & ll == 2))
# burst -> not burst
length(which(pl != ll & ll == 2))
# not burst -> not burst
length(which(pl == ll & ll == 1))
# not burst -> burst
length(which(pl != ll & ll == 1))
idx_fn = which(pl != ll & ll == 2)
idx_fp = which(pl != ll & ll == 1)
idx_drop = c(idx_fn[1 : 500], idx_fp[1 : 500])
out_df <- data.frame(training[-idx_drop, ]$vid, ll[-idx_drop] - 1, pl[-idx_drop] - 1);
write.table(out_df,
file = paste(workpath, 'prediction/i13p4/burst_prediction/training_bprslts', sep = ''),
sep = '\t', quote = FALSE, col.names = FALSE, row.names = FALSE)
# test - 1000 performance
prediction = predict(forest, test_f, type = 'class')
ll = c(test_l)
pl = c(prediction)
# burst
length(which(ll == 2))
# not burst
# burst -> burst
# burst -> not burst
length(which(ll == 1))
length(which(pl != ll & ll == 2))
# not burst -> not burst
length(which(pl == ll & ll == 1))
# not burst -> burst
length(which(pl == ll & ll == 2))
length(which(pl != ll & ll == 1))
idx_fn = which(pl != ll & ll == 2)
idx_fp = which(pl != ll & ll == 1)
idx_drop = c(idx_fn[1 : 500], idx_fp[1 : 500])
out_df <- data.frame(test[-idx_drop, ]$vid, ll[-idx_drop] - 1, pl[-idx_drop] - 1);
write.table(out_df,
file = paste(workpath, 'prediction/i13p4/burst_prediction/test_bprslts', sep = ''),
sep = '\t', quote = FALSE, col.names = FALSE, row.names = FALSE)
# burst
length(which(ll == 2))
# not burst
length(which(ll == 1))
# burst -> burst
length(which(pl == ll & ll == 2))
# burst -> not burst
length(which(pl != ll & ll == 2))
# not burst -> not burst
length(which(pl == ll & ll == 1))
# not burst -> burst
length(which(pl != ll & ll == 1))
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/Video_Popularity/'
data = read.table(paste(workpath, 'prediction/datasets/I30_training', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
i8 = data$V9
i9 = data$V10
i10 = data$V11
i11 = data$V12
i12 = data$V13
i13 = data$V14
ni = rowSums(data[2:14])
n30 = rowSums(data[2:31])
library(stats4)
# get n7 > 0 for log
idx = which(ni > 0)
length(ni) - length(idx)
ni_p = ni[idx]
n30_p = n30[idx]
LL <- function(c, sigma) {
R = log(n30_p) - log(ni_p) - c
R = suppressWarnings(dnorm(R, 0, sigma, log = TRUE))
-sum(R)
}
fit = mle(LL, start = list(c = 0.3, sigma = 1))
fit@coef[1]
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/Video_Popularity/'
data = read.table(paste(workpath, 'prediction/i13p4/burst_prediction/I30_training_bp_1000000000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
i8 = data$V9
i9 = data$V10
i10 = data$V11
i11 = data$V12
i12 = data$V13
i13 = data$V14
ni = rowSums(data[2:14])
n30 = rowSums(data[2:31])
burst = data$V32
bv = ni * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/Video_Popularity/'
data = read.table(paste(workpath, 'prediction/i13p4/burst_prediction/I30_training_bp_1100000000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
i8 = data$V9
i9 = data$V10
i10 = data$V11
i11 = data$V12
i12 = data$V13
i13 = data$V14
ni = rowSums(data[2:14])
n30 = rowSums(data[2:31])
burst = data$V32
bv = ni * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/Video_Popularity/'
data = read.table(paste(workpath, 'prediction/i13p4/burst_prediction/I30_training_bp_1110000000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
i8 = data$V9
i9 = data$V10
i10 = data$V11
i11 = data$V12
i12 = data$V13
i13 = data$V14
ni = rowSums(data[2:14])
n30 = rowSums(data[2:31])
burst = data$V32
bv = ni * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/Video_Popularity/'
data = read.table(paste(workpath, 'prediction/i13p4/burst_prediction/I30_training_bp_others', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
i8 = data$V9
i9 = data$V10
i10 = data$V11
i11 = data$V12
i12 = data$V13
i13 = data$V14
ni = rowSums(data[2:14])
n30 = rowSums(data[2:31])
burst = data$V32
bv = ni * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
#workpath = 'F:/Video_Popularity/'
workpath = '/Users/ouyangshuxin/Documents/Video_Popularity/'
data = read.table(paste(workpath, 'prediction/i13p4/burst_prediction/I30_training_bp_1000000000000', sep = ''))
i1 = data$V2
i2 = data$V3
i3 = data$V4
i4 = data$V5
i5 = data$V6
i6 = data$V7
i7 = data$V8
i8 = data$V9
i9 = data$V10
i10 = data$V11
i11 = data$V12
i12 = data$V13
i13 = data$V14
ni = rowSums(data[2:14])
n30 = rowSums(data[2:31])
burst = data$V32
bv = ni * burst
reg = lm(n30 ~ i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + bv - 1, weights = (1 / n30)^2)
summary(reg)
reg$coefficients
